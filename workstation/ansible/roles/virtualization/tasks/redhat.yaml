---
- name: Install virtualization Group
  ansible.builtin.dnf:
    name: '@virtualization'
    state: present

- name: Install libvirt
  ansible.builtin.dnf:
    name: libvirt
    state: present

- name: Configure libvirtd.conf - 1
  ansible.builtin.command: sed -i '/unix_sock_group/s/^# *//' /etc/libvirt/libvirtd.conf

- name: Configure libvirtd.conf - 2
  ansible.builtin.command: sed -i '/unix_sock_rw_perms/s/^# *//' /etc/libvirt/libvirtd.conf

- name: "Manage Virtualization Services"
  ansible.builtin.service:
    name: "{{ item }}"
    state: "started"
    enabled: true
  become: true
  loop:
    - "virtqemud.service"
    - "virtnetworkd.service"
    - "libvirtd.service"

- name: "Manage network Packages"
  ansible.builtin.package:
     name:
       - "bridge-utils"
       - "python-lxml"
     state: "present"

- name: "Manage physical bridge Device"
  community.general.nmcli:
     type: "bridge"
     conn_name: "br0"
     ifname: "br0"
     stp: true
     state: "present"  

- name: "Manage physical bridge Member"
  community.general.nmcli:
     conn_name: "ens18"
     ifname: "ens18"
     type: "bridge-slave"
     master: "br0"
     state: "present"
  
- name: "Manage virtual bridge Network"
  community.libvirt.virt_net:
     command: "define"
     name: "bridge"
     xml: "{{ lookup('template','libvirt_net_bridge.xml.j2') }}"

- name: Start a network
  community.libvirt.virt_net:
    command: create
    name: "bridge"

- name: Ensure that a given network will be started at boot
  community.libvirt.virt_net:
    autostart: yes
    name: "bridge"
...